name: Deployment

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

jobs:
  unit_tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./... --tags=unit

  push_test_image_to_registry:
    name: Push Docker test image to Docker Hub
    needs: [unit_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build container image
        run: docker build -t humbertoatondo/pokemon-api-test:$(echo $GITHUB_SHA | head -c7) -f dockerfiles/test/Dockerfile .

      - name: Docker push to Docker Hub
        run: docker push humbertoatondo/pokemon-api-test:$(echo $GITHUB_SHA | head -c7)

  integration_tests:
    name: Run integration tests
    needs: [push_test_image_to_registry]
    runs-on: ubuntu-latest
    services:
      test_api:
        image: humbertoatondo/pokemon-api-test:latest
        ports:
          - 5000:5000

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run tests
        run: go test -v ./... --tags=integration

  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: [integration_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build container image
        run: docker build -t humbertoatondo/pokemon-api:$(echo $GITHUB_SHA | head -c7) -f dockerfiles/development/Dockerfile .

      - name: Docker push to Docker Hub
        run: docker push humbertoatondo/pokemon-api:$(echo $GITHUB_SHA | head -c7)

  deploy_cluster:
    name: Deploy the K8s cluster in DigitalOcean
    needs: [integration_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # - name: Build container image
      #   run: docker build -t registry.digitalocean.com/humbertoatondo/pokemon-api:$(echo $GITHUB_SHA | head -c7) -f dockerfiles/development/Dockerfile .

      # - name: Log in to DigitalOcean Container Registry with short-lived credentials
      #   run: doctl registry login --expiry-seconds 1200

      # - name: Push image to DigitalOcean Container Registry
      #   run: docker push registry.digitalocean.com/humbertoatondo/pokemon-api:$(echo $GITHUB_SHA | head -c7)

      # - name: Update deployment file
      #   run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|registry.digitalocean.com/humbertoatondo/pokemon-api:'${TAG}'|' $GITHUB_WORKSPACE/k8s/digital_ocean_deployment.yaml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-pokemon-api

      # - name: Deploy to DigitalOcean Kubernetes
      #   run: kubectl apply -f $GITHUB_WORKSPACE/k8s/digital_ocean_deployment.yaml

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/pokemon-api.yaml

      - name: Verify deployment
        run: kubectl rollout status deployment/pokemon-api
